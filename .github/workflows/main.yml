name: assignment3

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and run Docker Compose
        run: docker-compose up -d --build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pytest

      - name: Install pytest
        run: sudo apt-get install -y pytest

      - name: Run tests
        run: |
          pytest -v tests/assn3_tests.py > assn3_test_results.txt

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: assn3_test_results.txt

  query:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run service container
        run: docker run -d -p 8000:8000 --name my-service my-service-image

      - name: Process queries and generate response
        run: |
          while IFS= read -r query
          do
            result=$(curl -s -X POST http://localhost:8000/dishes -d "name=$query")
            dish_id=$(echo "$result" | jq -r '.id')
            response=$(curl -s http://localhost:8000/dishes/$dish_id)
            calories=$(echo "$response" | jq -r '.calories')
            sodium=$(echo "$response" | jq -r '.sodium')
            sugar=$(echo "$response" | jq -r '.sugar')
            echo "$query contains $calories calories, $sodium mgs of sodium, and $sugar grams of sugar" >> response.txt
          done < query.txt

      - name: Upload response file
        uses: actions/upload-artifact@v3
        with:
          name: response-file
          path: response.txt
