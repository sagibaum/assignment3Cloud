name: assignment3

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
           context: .
           file: ./Dockerfile
           tags: assignment3_art:latest
           outputs: type=docker,dest=/tmp/image.tar
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
             name: assignment3
             path: /tmp/image.tar
         

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download image and run it in a container
      - name: Download artifact
        uses: actions/download-artifact@v3  # downloads all artifacts

      - name: Load Docker images from previous workflows
        run: docker load --input assignment3/image.tar

      - name: Check assignment3 image is loaded
        run: docker image ls

      - name: Run image in a container
        run: docker run -p8000:8000 assignment3_art &

      - name: Check container is running
        run: docker ps

      # Set up Python and pytest environment
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          

      # Run pytest tests and upload the results
      - name: Test with pytest
        run: |
          cd tests
          touch test_results.txt
          pytest -v assn3_tests.py > test_results.txt 
        
      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_test_results
          path: tests/test_results.txt


  query:
    runs-on: ubuntu-latest
    needs: test
    steps:
  # Download image and run it in a container
      - name: Download artifact
        uses: actions/download-artifact@v3  # downloads all artifacts

      - name: Load Docker images from previous workflows
        run: docker load --input assignment3/image.tar

      - name: Check assignment3 image is loaded
        run: docker image ls

      - name: Run image in a container
        run: docker run -p8000:8000 assignment3_art &

      - name: Check container is running
        run: docker ps


      - name: Process queries and generate response
        run: |
          while IFS= read -r query
          do
            result=$(curl -s -X POST http://localhost:8000/dishes -d "name=$query")
            dish_id=$(echo "$result" | jq -r '.id')
            response=$(curl -s http://localhost:8000/dishes/$dish_id)
            calories=$(echo "$response" | jq -r '.calories')
            sodium=$(echo "$response" | jq -r '.sodium')
            sugar=$(echo "$response" | jq -r '.sugar')
            echo "$query contains $calories calories, $sodium mgs of sodium, and $sugar grams of sugar" >> response.txt
          done < tests/query.txt

      - name: Upload response file
        uses: actions/upload-artifact@v3
        with:
          name: response-file
          path: response.txt