name: assignment3

on:
  push

jobs:
#This job will build the image and upload it as an artifact  
  build:
    runs-on: ubuntu-latest
    steps:

      - name: create log file
        run: | 
          echo $(date -Iminutes) > /tmp/log
          echo "Sagi Baum & Chen Ulfan" >> /tmp/log

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
           context: .
           file: ./Dockerfile
           tags: assignment3_art:latest
           outputs: type=docker,dest=/tmp/image.tar
      
      - name: see if image.tar is in /tmp
        run: ls /tmp

      - name: update log file on success
        if: success()
        run: echo image successfully built >> /tmp/log

      - name: update log file on failure
        if: failure()
        run: echo image not able to be built  >> /tmp/log
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
            name: assignment3
            path: /tmp/image.tar

      - name: Upload log file (always, even on build failure)
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: log
            path: /tmp/log   

#This job will run the container and run the tests
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download image artifacts and run it in a container
      - name: Download image artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: assignment3
          path: /tmp

      - name: Download log artifact
        uses: actions/download-artifact@v3
        with:
          name: log
          path: /tmp 
    
     #check if image.tar ,log downloaded successfully     
      - name: list /tmp directory and cat log file to see if it was downloaded
        run: |
          pwd
          ls /tmp
          cat /tmp/log

      - name: Load Docker images from previous workflows
        run: docker load --input /tmp/image.tar

      - name: Check assignment3 image is loaded
        run: docker image ls

      - name: Run image in a container
        run: docker run -p8000:8000 assignment3_art &

      - name: print to log if container was successfully started
        if: success()
        run: echo Container up and running >> /tmp/log

      - name: print to log if container failed to launch
        if: failure()
        run: echo Container failed to run >> /tmp/log

      - name: Check container is running
        run: docker ps

      # Set up Python and pytest environment
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

          

      # Run pytest tests and upload the results
      - name: Test with pytest
        run: |
          cd tests
          touch test_results.txt
          pytest -v assn3_tests.py > test_results.txt 
      
      - name: update log file on success
        if: success()
        run: echo tests succeeded >> /tmp/log

      - name: update log file on failure
        if: failure()
        run: echo tests failed >> /tmp/log

      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_test_results
          path: tests/test_results.txt

      - name: Upload log file (always, even on build failure)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: /tmp/log

#This job will run the query and produce the response file
  query:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: assignment3
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/image.tar

      - name: Check assignment3 image is loaded
        run: docker image ls

      - name: Run image in a container
        run: docker run -p8000:8000 assignment3_art &

      - name: Check container is running
        run: docker ps

      
      - name: read query.txt file from current directory and produce response file in /tmp/response.txt
        run: python query_txt_reader.py  
      
    
      - name: Upload resp file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: response
          path: /tmp/response.txt