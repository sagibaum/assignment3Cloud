name: assignment3
on:
  push
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.setport
          tags: wordsvr-v2:latest, ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:latest
          outputs: type=docker,dest=/tmp/image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: wordsvr
          path: /tmp/image.tar

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download image and run it in a container
      - name: Download artifact
        uses: actions/download-artifact@v3
      - name: Load Docker images from previous workflows
        run: docker load --input wordsvr/image.tar
      - name: Check wordsvr image is loaded
        run: docker image ls
      - name: Run image in container
        run: docker run -p8000:8000 wordsvr-v2 &
      - name: Check container is running
        run: docker ps

      # Set up Python and pytest environment
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Run pytest tests and upload the results
      - name: Test with pytest
        run: |
          cd pytest-code
          pytest -v test_word.py > test_results.txt
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_test_results
          path: pytest-code/test_results.txt
